# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python application

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Lint with flake8
      continue-on-error: true
      run: |
         pip install flake8  
            flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics \
              --exclude=venv,env,.venv,site-packages,lib,lib64,__pycache__,.git
            flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics \
             --exclude=venv,env,.venv,site-packages,lib,lib64,__pycache__,.git
    - name: Test with pytest
      if: hashFiles('server/tests/**/*.py') != ''
      env:
          SECRET_KEY: test-secret-key
          FLASK_ENV: testing
          DATABASE_URL: "sqlite:///:memory:"
      run: |
         pip install pytest pytest-cov  
         pytest tests/ -v --maxfail=1 --tb=short --cov=. --cov-report=term-missing
